from ..loader import bot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telebot.handler_backends import State, StatesGroup
from telebot.storage import memory_storage
from telebot import custom_filters

import os

user_data = {}


class States(StatesGroup):
    START = State()
    enter_name = State()
    confirm_name = State()
    enter_phone = State()
    enter_age = State()
    enter_gender = State()
    enter_weight = State()
    enter_height = State()
    enter_activity_level = State()
    describe_problem = State()
    ask_place = State()


def get_id(message):
    return message.from_user.id, message.chat.id


@bot.message_handler(commands=['start'])
def start_message(message: Message):
    user_id, chat_id = get_id(message)
    if user_id not in user_data:
        user_data[user_id] = {'username': message.from_user.username}
    bot.set_state(user_id, States.enter_name, chat_id)
    print(list(os.walk('data/photos')))

    bot.send_photo(user_id, photo='AgACAgIAAxkBAAIB62SBvAYVsNSOmu0dsjDGXqqHNF50AAIxyzEbta8RSLtRZv9ss1SSAQADAgADeQADLwQ',
                   caption=f'üëã –ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –õ–∏–∑–∞\n\n'
                           f'–Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ò–±—Ä–∞—Ç–∞, '
                           f'–≥–æ—Ç–æ–≤–∞ –ø—Ä–∏–Ω—è—Ç—å –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ª–∏—á–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É!\n\n'
                           f'üëÄ *–ö—Å—Ç–∞—Ç–∏, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?*\n\n'
                           f'(–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è)', reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')


@bot.message_handler(state=States.enter_name)
def get_name(message: Message):
    user_id, chat_id = get_id(message)
    name = message.text

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω', request_contact=True)
    markup.row(button1)
    text = f'*–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, {name} ‚ù£Ô∏è*\n\n' \
           '–ê —Ç–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ *—Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞*, —á—Ç–æ–±—ã –ò–±—Ä–∞—Ç –ª–∏—á–Ω–æ –º–æ–≥ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è!\n\n' \
           '(–ñ–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é)'
    bot.send_photo(user_id, photo='AgACAgIAAxkBAAIB7WSBvCk7Iocal_ss4QskerBkF9ZJAAIyyzEbta8RSCls76749M6ZAQADAgADeQADLwQ',
                   caption=text,
                   reply_markup=markup, parse_mode='Markdown')
    user_data[user_id]['name'] = name
    bot.set_state(user_id, States.enter_phone, chat_id)


@bot.message_handler(state=States.enter_phone, content_types=['contact'])
def get_age(message: Message):
    user_id, chat_id = get_id(message)

    if message.contact is not None:
        number = message.contact.phone_number
        user_data[user_id]['phone'] = number

        markup = ReplyKeyboardMarkup()
        button1 = KeyboardButton('–ü–æ–≥–Ω–∞–ª–∏!')
        markup.add(button1)
        bot.send_voice(chat_id, 'AwACAgIAAxkBAAIBe2SAcF8hmzZQSJNDsKLI-3ZlXDX3AAJDLAAC3ckAAUg2ON27vliZXC8E',
                       caption='üìûüî• –ò–±—Ä–∞—Ç –Ω–∞ —Å–≤—è–∑–∏, —Å–∫–æ—Ä–µ–µ —Å–ª—É—à–∞–π—Ç–µ –∞—É–¥–∏–æ!',
                       reply_markup=markup)
    else:
        bot.send_message(user_id, '–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ')


@bot.message_handler(state=States.enter_phone, func=lambda message: message.text == '–ü–æ–≥–Ω–∞–ª–∏!')
def start_test(message: Message):
    user_id, chat_id = get_id(message)
    markup = ReplyKeyboardMarkup()
    button1 = KeyboardButton('–ú')
    button2 = KeyboardButton('–ñ')
    markup.row(button1, button2)
    bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:*\n\n–ú/–ñ:', reply_markup=markup, parse_mode='Markdown')
    bot.set_state(user_id, States.enter_gender, chat_id)


@bot.message_handler(state=States.enter_gender)
def get_gender(message: Message):
    user_id, chat_id = get_id(message)

    text = message.text.lower()

    if text in ['–º', '–∂']:
        gender = text
        user_data[user_id]['gender'] = gender
        bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:*\n\n'
                                  '(–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É):', reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
        bot.set_state(user_id, States.enter_age, chat_id)
    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ–ª (–ú/–ñ).')


@bot.message_handler(state=States.enter_age)
def get_gender(message: Message):
    user_id, chat_id = get_id(message)

    age = message.text

    if age.isdigit() and 0 < int(age) < 100:
        user_data[user_id]['age'] = int(age)
        bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å:*\n\n(–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –≤ –∫–≥):',
                         reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
        bot.set_state(user_id, States.enter_weight, chat_id)
    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 99).')


@bot.message_handler(state=States.enter_weight)
def get_weight(message: Message):
    user_id, chat_id = get_id(message)
    text = message.text

    if text.isdigit():
        weight = int(text)
        user_data[user_id]['weight'] = weight
        bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç:*\n\n(–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –≤ —Å–º):',
                         reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
        bot.set_state(user_id, States.enter_height, chat_id)
    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).')


activity_levels = {1: '–ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ—Ç / —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ)',
                   2: '–ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (1-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é)',
                   3: '–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (3-5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)',
                   4: '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (6-7 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)',
                   5: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Ç—è–∂–µ–ª—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6-7 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é)'}


@bot.message_handler(state=States.enter_height)
def get_height(message: Message):
    user_id, chat_id = get_id(message)
    text = message.text

    if text.isdigit():
        height = int(text)
        user_data[user_id]['height'] = height
        message = 'üìå*–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:*\n\n' \
                  '1: –ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ—Ç / —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ)\n' \
                  '2: –ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (1-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é)\n' \
                  '3: –£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (3-5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)\n' \
                  '4: –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (6-7 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)\n' \
                  '5: –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Ç—è–∂–µ–ª—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6-7 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é)'

        markup = ReplyKeyboardMarkup()
        button1 = KeyboardButton('1')
        button2 = KeyboardButton('2')
        button3 = KeyboardButton('3')
        button4 = KeyboardButton('4')
        button5 = KeyboardButton('5')
        markup.row(button1, button2, button3, button4, button5)

        bot.send_message(user_id, message, reply_markup=markup, parse_mode='Markdown')
        bot.set_state(user_id, States.enter_activity_level, chat_id)
    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).')


@bot.message_handler(state=States.enter_activity_level)
def get_activity_level(message: Message):
    user_id, chat_id = get_id(message)
    text = message.text

    if text.isdigit() and int(text) in [1, 2, 3, 4, 5]:
        activity_level = int(text)
        user_data[user_id]['activity_level'] = activity_level
        bot.send_message(user_id, '*–ò —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ...*\n\n- –û–ø–∏—à–∏—Ç–µ –≤–∫—Ä–∞—Ç—Ü–µ, —á—Ç–æ –≤–∞—Å '
                                  '*–±–µ—Å–ø–æ–∫–æ–∏—Ç –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç* –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ '
                                  '–æ—Ç —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ò–±—Ä–∞—Ç–æ–º?\n\n'
                                  '(–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç —Å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å):',
                         reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
        bot.set_state(user_id, States.describe_problem, chat_id)
    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5).')


@bot.message_handler(state=States.describe_problem)
def describe_problem(message: Message):
    user_id, chat_id = get_id(message)
    text = message.text

    user_data[user_id]['problem'] = text

    bot.send_photo(user_id,
                   photo='AgACAgIAAxkBAAICEGSBvWgqfkLWQ-1mlbfMQPwDDBl7AAIzyzEbta8RSArObAbGEt9wAQADAgADeQADLwQ',
                   caption='–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n\n'
                           '*–ò–±—Ä–∞—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.*\n\n'
                           '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ 21FIT! ‚ù£Ô∏è\n–ï—â–µ —É–≤–∏–¥–∏–º—Å—è!')

    text = f"üßæ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞, –ë–æ—Å—Å!\n\n" \
           f"*–ò–º—è:* {user_data[user_id]['name']}\n" \
           f"*–ü–æ–ª:* {user_data[user_id]['gender']}\n" \
           f"*–¢–µ–ª–µ—Ñ–æ–Ω:* {user_data[user_id]['phone']}\n" \
           f"*–í–æ–∑—Ä–∞—Å—Ç:* {user_data[user_id]['age']}\n" \
           f"*–í–µ—Å:* {user_data[user_id]['weight']}\n" \
           f"*–†–æ—Å—Ç:* {user_data[user_id]['height']}\n" \
           f"*–§–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:* {activity_levels[user_data[user_id]['activity_level']]}\n" \
           f"*–ü—Ä–æ–±–ª–µ–º–∞:* {user_data[user_id]['problem']}\n" \
           f"*Username:* @{user_data[user_id]['username']}" \
           f"\n\n–†–∞–¥–∞ –±—ã–ª–∞ –ø–æ–º–æ—á—å!\n–° –ª—é–±–æ–≤—å—é, –õ–∏–∑–∞‚ù£Ô∏è"

    bot.send_message(58790442, text=text, parse_mode='Markdown')
    bot.set_state(user_id, States.START, chat_id)


# @bot.message_handler(content_types=['voice'])
# def handle_voice(message):
#     file_id = message.voice.file_id
#     print(f"Received voice with id: {file_id}", )
#     bot.send_voice(message.chat.id, file_id)
#
# @bot.message_handler(content_types=['photo'])
# def handle_photo(message):
#     file_id = message.photo[-1].file_id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–π (–Ω–∞–∏–±–æ–ª—å—à–µ–π) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
#     print(f"Received photo with id: {file_id}")
#     bot.send_photo(message.chat.id, file_id)


bot.add_custom_filter(custom_filters.StateFilter(bot))